spring.security.oauth2.client.registration.google.client-id=439553957314-lirsc0amk5t80fglk8cumpc950rodamv.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=08aU9gzRm0Gjoio9Dt3nHfmr
spring.security.oauth2.client.registration.google.scope=profile,email

# 네이버는 스프링 시큐리티를 공식 지원하지 않기 때문에 그동안 Common-OAuth2Provider에서 해주던
#값들도 전부 수동으로 입력해야 함.
# registration
spring.security.oauth2.client.registration.naver.client-id=Kd3CAZ0ha_3pIWJ4oDOF
spring.security.oauth2.client.registration.naver.client-secret=38j_MdhkIA
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#user-name-attribute=response : 기준이 되는 user_name의 이름을 네이버에서는 response로 해야 한다
#이유는 네이버의 회원 조회 시 반환되는 JSON 형태 때문